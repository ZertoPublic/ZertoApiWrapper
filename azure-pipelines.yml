# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.rr)

jobs:
  - job: Build_PS_Win2016
    timeoutInMinutes: 10
    cancelTimeoutInMinutes: 2
    pool:
      vmImage: vs2017-win2016
    steps:
    - script: |
        pwsh -c ".\build.ps1 -Verbose"
      displayName: 'Build and Test'
    - task: PublishTestResults@2
      inputs:
        testRunner: 'NUnit'
        testResultsFiles: '**/Public/TestResults.xml'
        testRunTitle: 'PS_Win2016'
      displayName: 'Publish Test Results'

  - job: Build_PSCore_Ubuntu1604
    timeoutInMinutes: 10
    cancelTimeoutInMinutes: 2
    pool:
      vmImage: ubuntu-16.04
    steps:
    - script: |
        pwsh -c '.\build.ps1 -verbose'
      displayName: 'Build and Test'
    - task: PublishTestResults@2
      inputs:
        testRunner: 'NUnit'
        testResultsFiles: '**/Public/TestResults.xml'
        testRunTitle: 'PSCore_Ubuntu1604'
      displayName: 'Publish Test Results'

  - job: Build_PSCore_MacOS1013
    timeoutInMinutes: 10
    cancelTimeoutInMinutes: 2
    pool:
      vmImage: xcode9-macos10.13
    steps:
    - script: |
        pwsh -c '.\build.ps1 -verbose'
      displayName: 'Build and Test'
    - task: PublishTestResults@2
      inputs:
        testRunner: 'NUnit'
        testResultsFiles: '**/Public/TestResults.xml'
        testRunTitle: 'PSCore_MacOS1013'
      displayName: 'Publish Test Results'
